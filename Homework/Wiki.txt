# Постановка задачи
## Условие
Задан текстовый файл, каждая строка которого может рассматриваться как
запись целого числа в двоичной системе счисления. На его основе создайте
текстовый файл, в каждой строке которого записано то же самое число, но 
в шестнадцатеричной системе счисления.
## Допущения:
 - Длина строки не больше 255.
 - В одной строке не более 1 числа.
## Примеры работы:
--------------------------------
|    Данные   |   Результат    |
|:-----------:|----------------|
| Несущ. файл | Файл не сущ.   |
| Пустой файл | Пустой файл    |
| 1 <br> 23401 g <br> 100011 <br> 101011101001 <br> 10 101 <br> | 1 <br> <br> 23 <br> AE9 <br> <br>|
--------------------------------
## Классы эквивалентности
- 1 число в 2-ой системе счисления.
- 2 числа в строке.
- 1 число не в 2-ой системе счисления.
# Декомпозиция
![01_A-0](uploads/fbc966366a24f2b2f18441b335ae15a4/01_A-0.png)

![02_A0](uploads/41bee75a9fc5d42d5c9cfd3d1cc81f3f/02_A0.png)

# Спецификация
## trim
-----------------------------------------------------------------------
| имя              | trim                                             | 
|------------------|--------------------------------------------------|
| функция          | Удаление пробельных символов в начале и конце    |
|список параметров | Переменная-строка, копия переменной-строки       |
|вход. данные      | Переменная-строка                                |
|выход. данные     | Копия переменной-строки без пробелов             |
|внеш. эффекты     | нет                                              |
-----------------------------------------------------------------------
## Тесты
-------------------------------------------------------------------
|    Данные     |   Результат                                     |
|---------------|-------------------------------------------------|
| Пустая строка | Пустая строка                                   |
| "    "1       | 1                                               |
| "   "2301"   "| 2301                                            |
|  100011"     "| 10001                                           |
|   101 101011  | 101 101011                                      |
| "  "1001 g"  "| 1001 g                                          |
-------------------------------------------------------------------
**Классы эквивалентности:** 
- пробелы только в начале строки
- пробелы только в конце строки
- пробелы и с конца и с начала

## Допущения
- Длина строки не более 255 символов

## check_num
-----------------------------------------------------------------------
| имя              | check_num                                        | 
|------------------|--------------------------------------------------|
| функция          | Проверка строки на содержание 2-го числа         |
|список параметров | Переменная-строка, переменная с ответом (1 или 0)|
|вход. данные      | Переменная-строка                                |
|выход. данные     | Флаг (1 или 0)                                   |
|внеш. эффекты     | нет                                              |
-----------------------------------------------------------------------
## Тесты
-------------------------------------------------------------------
|    Данные     |   Результат                                     |
|---------------|-------------------------------------------------|
| Пустая строка | 0                                               |
| 1             | 1                                               |
| 2301          | 0                                               |
| 100011        | 1                                               |
| 101 101011    | 0                                               |
|  1001         | 1                                               |
-------------------------------------------------------------------
**Классы эквивалентности:** 
- правильное 2-е число
- не 2-е число
- несколько чисел в одну строку
## Допущения
- не более 1 числа в строке
- строка без пробельных символов в начале и в конце

## translate_num
-----------------------------------------------------------------------
| имя              | translate_num                                    | 
|------------------|--------------------------------------------------|
| функция          | Перевод числа в 16-ую систему                    |
|список параметров | Переменная-строка в 2-ой с.с., переменная-строка в 16-ой с.с.|
|вход. данные      | Переменная-строка в 2-ой с.с.                    |
|выход. данные     | Переменная-строка в 16-ой с.с.                   |
|внеш. эффекты     | нет                                              |
-----------------------------------------------------------------------
## Тесты
------------------------------------------------------
|    Данные     |   Результат                         |
|---------------|-------------------------------------|
| 0             | 0                                   |
| 1             | 1                                   |
| 10101111      | AF                                  |
| 100011        | 23                                  |
| 101101011     | 16B                                 |
-------------------------------------------------------

**Классы эквивалентности:**
- 2-е число длина которого кратна 4
- 2-е число длина которого не кратна 4

## Допущения:
- не более 1 числа в строке
- строка без пробельных символов в начале и в конце

# Псевдокод

**Основная программа**

*Вход:* файл с числами в 2-ой системе

*Выход:* файл с числами в 16-ой системе

```
открыть файл f с указанным именем
если f существует и не пустой то
    пока не конец файла f делать
         read_num(f,s)
         s_new = trim(s)
         если check_num(s_new) != 0 то
              translate_num(s_new)
              print_num(s_new)
         иначе 
              print_num('')
         все если
    все пока
если f не существует то
    print_num('Файл не существует')
если f пустой то 
    print_num('Пустой файл')
все если
```
**trim**

*Вход:* строка

*Выход:* строка

```
s_1 = пустая строка
пока не конец строки делать
    скопировать символ в пустую строку s_1
все пока
пока символ строки s_1 пробел делать
    удалить символ строки s_1
все пока
пока символ с конца строки s_1 пробел делать
    удалить символ строки s_1
все пока
вернуть строку s_1
```

**check_num**

*Вход:* строка 

*Выход:* флаг

```
flag = 1
пока не конец строки и flag = 0 делать
     если символ строки не равен '1' или '0' то
          flag = 0
     все если
все пока
```

**translate_num**

*Вход:* строка с числом в 2-ой системе

*Выход:* строка с числом в 16-ой системе

```
num2 = ''
num16 = ''
j = 0
массив-словарь 1 = [0000,0001,0010,0011,0100,....,1111]
массив-словарь 2 = [0,1,2,3,...,F]

если длина строки не кратна 4 то
     добавить в начало строки '0' * длина строки mod(4)
все если

i = 0
пока не конец строки делать
        записать элементы строки от i до i+4 в переменную num2
        найти индекс j вхождения переменной num2 в массив-словарь 1
        в конец переменной num16 добавить элемент из массива-словаря 2 по индексу j
все пока
вернуть num16
```
# Распределение по файлам

----------------------------------------------
| Подзадача                  | Файл          |
|----------------------------|---------------|
| read_num <br> print_num    | io.c          |
|translate_num <br> check_num <br> trim | translation.c |
| Основная программа         |main.c         |
----------------------------------------------